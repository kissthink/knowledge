 .. _git_introduce:

########
基本介绍
########


**GIT链接**
   1. `Git学习教程git简介1-7 <http://fsjoy.blog.51cto.com/318484/244397>`_
        如不能联网，请察看保存在 **转** 的离线文件(这个人写的太好了，我没必要再重写了)
   2. 这本书写的不错 `Pro Git <http://progit.org/book/>`_


**Git 特点**
    Git最大的优势在于两点：易于本地增加分支和分布式的特性

**Git源码**
    #. 源码中各语言所占比例:
        .. figure:: image/git_used_language.png
           :width: 70%

**文件存储机制**
    1. 文件HEAD存放根节点的信息
    2. *目录refs* 存储了你在当前版本控制目录下的各种不同引用(引用指的是你本地和远程所用到的各个树分支的信息),它有如下几个文件
        * heads   //存储对不同的根?
        * remotes //远程版本库
        * stash   //Git栈
        * tags    //标签

       说明:可以通过命令 ``git show-ref`` 更清晰地查看引用信息
    3. 目录logs根据不同的引用存储了日志信息
       因此，Git只需要代码根目录下的这一个.git目录就可以记录完整的版本控制信息，而不是像SVN那样根目录和子目录下都有.svn目录


**Git与SVN的不同之处**
    1. 易于本地增加分支
        Git本地和服务器端结构都很灵活，所有版本都存储在一个目录中，你只需要进行分支的切换即可达到在某个分支工作的效果。而 SVN则完全不同，如果你需要在本地试验一些自己的代码，只能本地维护多个不同的拷贝，每个拷贝对应一个SVN服务器地址。
        Git只需要开一个分支或者转回到主分支上，就可以随时开始Bug修改的任务，完成之后，只要切换到原来的分支就可以优雅的继续以前的任务。只要你愿意，每一个新的任务都可以开一个分支，完成后，再将它合并到主分支上，轻松而优雅。
